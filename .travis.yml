---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always


fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt


matrix:
  fast_finish: true
  include:

# https://santa.readthedocs.io/en/latest/development/building/
# https://santa.dev/development/building.html
    - name: "build santa wo homebrew on macOS 10.15.5 osx xcode12u"
      os: osx
      osx_image:
        - xcode12.2 #macOS 10.15.7
        - xcode12u #macOS 10.15.5
        - xcode12 #macOS 10.15.7
      addons:
        homebrew:
          packages:
          - bazel 
          update: true
      language: shell
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - python --version
        - pip install -r requirements.txt
      script:
      - git clone https://github.com/google/santa && cd santa 
      - sudo bazel build //Source/santa_driver -c opt #Build a release (optimized) version of Santa
      - sudo santactl sync
      # check the SHA-265 for Firefox.app
      # - santactl binaryinfo /Applications/Firefox.app
      after_success:
        - deactivate

# https://github.com/zentralopensource/zentral/wiki/Docker-deployment
    - name: "deploy zentral - bionic"
      dist: bionic
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - git clone https://github.com/zentralopensource/zentral
        - sudo docker-compose up -d #Build and launch all the containers in the background:
        - sudo docker-compose logs -f --tail=100 web #watch the web container logs
        # Create a Zentral superuser
        - sudo docker-compose run --rm web createuser --superuser henry henry@zentral.pro
      after_success:
        - deactivate 

# https://github.com/groob/moroz
    - name: "build moroz - bionic"
      dist: bionic
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - git clone https://github.com/groob/moroz.git
        - cd cmd/moroz &&  sudo go build
      after_success:
        - deactivate 


    # argocd
    # https://argoproj.github.io/argo-cd/cli_installation/
    # - name: "deploy argocd w homebrew on macOS 10.15.5 osx xcode12u"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode12u
    #   addons:
    #     homebrew:
    #       packages:
    #       - argocd 
    #       update: true
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - python --version
    #     - pip install -r requirements.txt
    #   # script:
    #   after_success:
    #     - deactivate

    # argocd
    # https://argoproj.github.io/argo-cd/cli_installation/
    # - name: "deploy argocd wo homebrew on macOS 10.15.5 osx xcode12u"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode12u
    #   # addons:
    #   #   homebrew:
    #   #     packages:
    #   #     - argocd 
    #   #     update: true
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - python --version
    #     - pip install -r requirements.txt
    #   script:
    #     - VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
    #     - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-darwin-amd64
    #     - chmod +x /usr/local/bin/argocd
    #   after_success:
    #     - deactivate

    # PowerDNS Recursor
    # https://github.com/PowerDNS/pdns/blob/master/pdns/recursordist/README.md
    # - name: "build PowerDNS Recursor on macOS 10.15.5 osx xcode12u"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode12u
    #   addons:
    #     homebrew:
    #       casks:
    #       - multipass
    #       packages:
    #       - boost 
    #       - lua 
    #       - pkg-config
    #       - ragel 
    #       - openssl
    #       update: true
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - python --version
    #     - pip install -r requirements.txt
    #   # <<: *fleet_install_tasks
    #   # <<: *fleet_script_tasks
    #   script:
    #     - brew list --versions
    #     # Compiling from git checkout
    #     - git clone https://github.com/PowerDNS/pdns.git
    #     - cd pdns/pdns/recursordist/
    #     - ls -l
    #     # - ./configure --with-lua PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig
    #     # - make -j4
    #   after_success:
    #     # - brew cask uninstall multipass
    #     - deactivate

    # #The default backend on macOS is hyperkit, wrapping Appleâ€™s Hypervisor.framework
    # #You need macOS Yosemite, version 10.10.3 or later installed on a 2010 or newer Mac
    # #https://docs.travis-ci.com/user/reference/osx/#macos-version
    # # https://multipass.run/docs/installing-on-macos
    # # https://brew.sh/
    # - name: "multipass on macOS 10.15.4 osx xcode11.5"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode11.5
    #   addons:
    #     homebrew:
    #       casks:
    #       - dotnet-sdk
    #       - multipass
    #       packages:
    #       - beanstalk
    #       update: true
    #   language: shell
    #   before_install:
    #     - pip install virtualenv
    #     - virtualenv -p $(which python2) ~venvpy2
    #     - source ~venvpy2/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   script:
    #     # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    #     # - brew cask install multipass
    #     # - multipass version
    #     - brew list --versions
    #   after_success:
    #     # - brew cask uninstall multipass
    #     - deactivate

    # - name: "Python 3.7.5 on macOS 10.15.5 osx xcode12u"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode12u
    #   addons:
    #     homebrew:
    #       casks:
    #       - dotnet-sdk
    #       - multipass
    #       packages:
    #       - beanstalk
    #       update: true
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   script:
    #     # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    #     # - brew cask install multipass
    #     # - multipass version
    #     - brew list --versions
    #   after_success:
    #     # - brew cask uninstall multipass
    #     - deactivate

    # - name: "Python 2.7.17 on macOS xcode10.2"
    #   os: osx
    #   osx_image: xcode10.2
    #   language: shell
    #   before_install:
    #     - pip install virtualenv
    #     - virtualenv -p $(which python2) ~venvpy2
    #     - source ~venvpy2/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   after_success:
    #     - deactivate
    
        
    
    # - name: "Python 3.7.5 on macOS xcode10.2"
    #   os: osx
    #   osx_image: xcode10.2
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   after_success:
    #     - deactivate
    
    # - name: "Python 3.7.5 on macOS xcode9.4 "
    #   os: osx
    #   osx_image: xcode9.4
    #   language: shell
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   after_success:
    #     - deactivate